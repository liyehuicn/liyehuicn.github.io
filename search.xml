<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[git - 简易指南]]></title>
    <url>%2F2017%2F09%2F09%2Fgit%20-%20%E7%AE%80%E6%98%93%E6%8C%87%E5%8D%97%2F</url>
    <content type="text"><![CDATA[git - 简易指南助你开始使用 git 的简易指南，木有高深内容，;)。 安装下载 git OSX 版 下载 git Windows 版 下载 git Linux 版 创建新仓库创建新文件夹，打开，然后执行git init以创建新的 git 仓库。 检出仓库执行如下命令以创建一个本地仓库的克隆版本：git clone /path/to/repository如果是远端服务器上的仓库，你的命令会是这个样子：git clone username@host:/path/to/repository 工作流你的本地仓库由 git 维护的三棵“树”组成。第一个是你的 工作目录，它持有实际文件；第二个是 缓存区（Index），它像个缓存区域，临时保存你的改动；最后是 HEAD，指向你最近一次提交后的结果。 添加与提交你可以计划改动（把它们添加到缓存区），使用如下命令：git add &lt;filename&gt;git add *这是 git 基本工作流程的第一步；使用如下命令以实际提交改动：git commit -m &quot;代码提交信息&quot;现在，你的改动已经提交到了 HEAD，但是还没到你的远端仓库。 推送改动你的改动现在已经在本地仓库的 HEAD 中了。执行如下命令以将这些改动提交到远端仓库：git push origin master可以把 master 换成你想要推送的任何分支。 如果你还没有克隆现有仓库，并欲将你的仓库连接到某个远程服务器，你可以使用如下命令添加：git remote add origin &lt;server&gt;如此你就能够将你的改动推送到所添加的服务器上去了。 分支分支是用来将特性开发绝缘开来的。在你创建仓库的时候，master 是“默认的”。在其他分支上进行开发，完成后再将它们合并到主分支上。 创建一个叫做“feature_x”的分支，并切换过去：git checkout -b feature_x切换回主分支：git checkout master再把新建的分支删掉：git branch -d feature_x除非你将分支推送到远端仓库，不然该分支就是 不为他人所见的：git push origin &lt;branch&gt; 更新与合并要更新你的本地仓库至最新改动，执行：git pull以在你的工作目录中 获取（fetch） 并 合并（merge） 远端的改动。要合并其他分支到你的当前分支（例如 master），执行：git merge &lt;branch&gt;两种情况下，git 都会尝试去自动合并改动。不幸的是，自动合并并非次次都能成功，并可能导致 冲突（conflicts）。 这时候就需要你修改这些文件来人肉合并这些 冲突（conflicts） 了。改完之后，你需要执行如下命令以将它们标记为合并成功：git add &lt;filename&gt;在合并改动之前，也可以使用如下命令查看：git diff &lt;source_branch&gt; &lt;target_branch&gt; 标签在软件发布时创建标签，是被推荐的。这是个旧有概念，在 SVN 中也有。可以执行如下命令以创建一个叫做 1.0.0 的标签：git tag 1.0.0 1b2e1d63ff1b2e1d63ff 是你想要标记的提交 ID 的前 10 位字符。使用如下命令获取提交 ID：git log你也可以用该提交 ID 的少一些的前几位，只要它是唯一的。 替换本地改动假如你做错事（自然，这是不可能的），你可以使用如下命令替换掉本地改动：git checkout -- &lt;filename&gt;此命令会使用 HEAD 中的最新内容替换掉你的工作目录中的文件。已添加到缓存区的改动，以及新文件，都不受影响。 假如你想要丢弃你所有的本地改动与提交，可以到服务器上获取最新的版本并将你本地主分支指向到它：git fetch origingit reset --hard origin/master 有用的贴士内建的图形化 git：gitk彩色的 git 输出：git config color.ui true显示历史记录时，只显示一行注释信息：git config format.pretty oneline交互地添加文件至缓存区：git add -i 链接与资源]]></content>
      <categories>
        <category>这里写分类</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HEXO建站-基本设置]]></title>
    <url>%2F2017%2F09%2F07%2FHEXO%E5%BB%BA%E7%AB%99-%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE%20%2F</url>
    <content type="text"><![CDATA[前言本文主要围绕两部分进行介绍： 1、HEXO的基本命令与基本目录结构 2、HEXO网站的配置文件与基本配置 HEXO的基本命令与基本目录结构基本目录结构 主目录 12345678910├── .deploy #需要部署的文件├── node_modules #Hexo插件├── public #生成的静态网页文件├── scaffolds #模板├── source #博客正文和其他源文件, 404 favicon CNAME 等都应该放在这里| ├── _drafts #草稿| └── _posts #文章├── themes #主题├── _config.yml #全局配置文件└── package.json 主题目录 123456789101112131415161718├── languages #国际化| ├── default.yml #默认| └── zh-CN.yml #中文├── layout #布局| ├── _partial #局部的布局| └── _widget #小挂件的布局├── script #js脚本├── source #源代码文件| ├── css #CSS| | ├── _base #基础CSS| | ├── _partial #局部CSS| | ├── fonts #字体| | ├── images #图片| | └── style.styl #style.css| ├── fancybox #fancybox| └── js #js├── _config.yml #主题配置文件└── README.md #主题介绍 以上目录，并不一一介绍，我们主要了解其中主要的部分：主目录常用部分：scaffoldssourcethemesconfig.yml主题目录：看需要，日常操作都会涉及到：但主要的还是config.yml、languages等。接下来，我们继续根据目录介绍涉及的部分，站点配置部分更多涉及主题目录的配置。 HEXO的基本命令每次部署的步骤，可按以下三步来进行。 1234567891011hexo clean #清除PUBLIC和编译文件hexo generate #编译网站目录hexo deploy #同步到GIT 或者CODINGnpm install &lt;plugin-name&gt; --save #安装npm update #升级npm uninstall &lt;plugin-name&gt; #卸载 一些常用命令： hexo new”postName” #新建文章 #存放在主目录的source下的POST目录下 hexo new page”pageName” #新建页面 hexo generate #生成静态页面至public目录 hexo server #开启预览访问端口（默认端口4000，’ctrl + c’关闭server） hexo deploy #将.deploy目录部署到GitHub hexo help # 查看帮助 hexo version #查看Hexo的版本 HEXO网站配置文件与基本配置HEXO网站的配置文件 在根目录下的_config.yml主要是对网站的总属性进行设置如：网站标题，网站logo,网站插件使用等全局的属性 主题目录下的_config.yml主要是针对网站的布局，导航等特性设置进行设置 基本配置主配置文件介绍 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071主配置文件&lt;pre&gt;# Site #站点信息title: lmintlcx #标题subtitle: 做人不卖萌跟咸鱼有什么区别 #副标题description: lmintlcx lm lcx blog #描述author: lmintlcx #作者language: zh-Hans #语言timezone: Asia/Shanghai #时区# URL #链接格式url: http://joryhe.coding.me/ #网址root: / #根目录permalink: post/:title.html #文章的链接格式permalink_defaults:# Directory #目录source_dir: source #源文件public_dir: public #生成的网页文件tag_dir: tags #标签archive_dir: archives #归档category_dir: categories #分类code_dir: downloads/codei18n_dir: :lang #国际化skip_render:# Writing #写作new_post_name: :title.md #新文章标题default_layout: post #默认模板titlecase: false #标题转换成大写external_link: true #新标签页里打开连接filename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight: #语法高亮 enable: true line_number: false #显示行号 auto_detect: true tab_replace:# Category &amp; Tag #分类和标签default_category: uncategorized #默认分类category_map:tag_map:# Date / Time format #日期时间格式date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination #分页per_page: 20 #每页文章数, 设置成 0 禁用分页pagination_dir: page# Extensions #插件和主题## 插件: http://hexo.io/plugins/## 主题: http://hexo.io/themes/theme: next# Deployment #部署, joryhe是我的用户名, 同时发布GitHub deploy: type: git repo: github: github: git@github.com:joryhe/joryhe.github.io.git,master# Disqus #Disqus评论系统disqus_shortname: plugins: #插件，例如生成 RSS 和站点地图的- hexo-generator-feed- hexo-generator-sitemap&lt;/pre&gt; 主题配置文件1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677menu: #菜单 home: / #首页 archives: /archives #归档 about: /about #关于 #commonweal: /404.html #公益404 #tags: /tags #标签 #categories: /categories #分类## 经典介绍配置# 小图标favicon: /favicon.ico# 默认关键词keywords: # 留空使用默认的, false 禁用, 也可以写指定的地址rss:# Icon fonts# default | linecons | fifty-shades | feathericon_font: default# 代码高亮主题 https://github.com/chriskempson/tomorrow-theme# normal | night | night eighties | night blue | night brighthighlight_theme: normal# MathJax Support #数学公式mathjax: true# Schemes #启用主题中的主题Mistscheme: Mist# 侧边栏# - post 只在文章页面显示# - always 所有页面显示# - hide 隐藏sidebar: always# 自动滚动到"阅读更多"标记的下面scroll_to_more: true# 自动给目录添加序号toc_list_number: true# 自动截取摘要auto_excerpt: enable: false length: 150# Lato 字体use_font_lato: true# Make duoshuo show UA# user_id must NOT be null when admin_enable is true!# you can visit http://dev.duoshuo.com get duoshuo user id.duoshuo_info: ua_enable: true admin_enable: false user_id: 0 #admin_nickname: ROOT## DO NOT EDIT THE FOLLOWING SETTINGS## UNLESS YOU KNOW WHAT YOU ARE DOING# 动画use_motion: true# Fancybox 看图插件fancybox: true# Static filesvendors: vendorscss: cssjs: jsimages: images# Theme versionversion: 0.4.5.1 添加小图标将 favicon.ico 文件放在 source 目录下, 修改主题配置文件 1favicon: /favicon.ico 语言设置主要语言代码： English (en) 中文简体 (zh-Hans) French (fr-FR) 正体中文 (zh-hk/zh-tw) Russian (ru) German (de) 站点配置文件下定义语言： 1language: zh-hk 菜单导航栏设置配置在主题配置文件下 1234567menu: home: / archives: /archives categories: /categories tags: /tags commonweal: /404.html about: /about 新增标签页使用命令hexp new page “tags” 并将页面类型设置为tags 1234title: tagsdate: 2016-04-19 22:37:08type: "tags"--- 通常情况下你的标签页并不需要评论框，取消评论代码 12345title: tagsdate: 2016-04-19 22:37:08type: "tags"comments: false--- 在主题配置文件下的菜单设置项memu下设置，设置完成在主页导航可以看到标签导航栏 12menu: categories: /categories 关于自己颜面abouthexo new page “about”新增about页面编辑source/about/index.md:添加菜单导航，在主题配置文件 12menu: about: /about RSS设置NPM install hexo-generator-feed安装RSS插件编辑主题配置文件 rss 字段 1rss: true 正常情况下，会在你的网站根目录下生成atom.xml 侧栏设置post - 默认行为, 在文章页面(拥有目录列表)时显示always - 在所有页面中都显示hide - 在所有页面中都隐藏(可以手动展开)。 1sidebar: post 头像设置 编辑站点配置文件, 新增字段 avatar12avatar: /images/xxx.jpg 作者名称编辑站点配置文件的author 站点描述设置 编辑站点配置文件的description 侧边栏社交链接站点配置文件新增字段 social, 然后添加社交站点名称与地址 1234567# Social linkssocial: GitHub: https://github.com/lmintlcx Twitter: https://twitter.com/lmintlcx Zhihu: http://www.zhihu.com/people/lmintlcx Douban: http://www.douban.com/people/lmintlcx #Weibo: http://weibo.com/lmlcx 腾讯公益 404 页面source 目录下新建 404.html 页面 123456789101112&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt; &lt;meta http-equiv="content-type" content="text/html;charset=utf-8;"/&gt; &lt;meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" /&gt; &lt;meta name="robots" content="all" /&gt; &lt;meta name="robots" content="index,follow"/&gt;&lt;/head&gt;&lt;body&gt;&lt;script type="text/javascript" src="http://www.qq.com/404/search_children.js" charset="utf-8" homePageUrl="your-site-url" homePageName="回到我的主页"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 文章摘录NexT 支持三种方式来控制首页文章的显示方式1.在文章中使用 手动进行截断2.在文章的 front-matter 中添加 description, 内容为文章摘要3.自动形成摘要, 在主题配置文件中添加 123auto_excerpt: enable: true length: 150 #默认截取的长度为 150 字符 设定首页/归档/标签页面文章的篇数安装以下插件 123hexo-generator-indexhexo-generator-archivehexo-generator-tag 站点配置文章中设定 12345678910index_generator: per_page: 5archive_generator: per_page: 20 yearly: true monthly: truetag_generator: per_page: 10]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[通过 Hexo 插件插入音乐/视频]]></title>
    <url>%2F2017%2F09%2F02%2F%E9%80%9A%E8%BF%87%20Hexo%20%E6%8F%92%E4%BB%B6%E6%8F%92%E5%85%A5%E9%9F%B3%E4%B9%90%E8%A7%86%E9%A2%91%2F</url>
    <content type="text"><![CDATA[关于音乐，视频添加 虽然可以通过使用html标签的方式加入音乐，视频什么的，但是逼格不够高，还是研究下hexo自带的播放器插件。。插件 这里需要使用两个播放器插件 hexo-tag-aplayer hexo-tag-dplayer 两款插件基于 [DIYgod] 编写的 html5 播放器 APlayer 和 DPlayer 开发。 安装 网上大部分说直接安装以上两个插件就行，但是后来发现如果直接安装，然后使用标签在文章中是不能使用的，会提示找不到这两个标签这个错误。。 后来仔细研究了下，这连个hexo插件要想使用，还需要先安装aplayer和dpalyer 所以正确的安装步奏如下： 12npm install --save hexo-tag-aplayernpm install hexo-tag-dplayer --save 然后在文章中就可以正常使用了，关于标签的使用，可以到插件作者主页去查看如果提示缺少文件什么的，请参照这篇文章进行添加:参考 使用Demo 以下简单的使用：插入MP3: 音乐代码：其中author,title 前两个标签必须添加，不然报错，图片可以不用添加 1234567&#123;% aplayer &quot;title&quot; &quot;author&quot; &quot;http://opj0cbfmf.bkt.clouddn.com/Part.3%20Lasse%20Lindh%20-%20Hush.mp3&quot; &quot;http://opj0cbfmf.bkt.clouddn.com/hush.jpg&quot; &quot;autoplay=false&quot; %&#125;title标题:音乐author作者:音乐url:音乐文件的urlpicture_url:可选的,音乐图片urlautoplay:可选,播放音乐,不支持的移动浏览器 效果如下： new APlayer({ element: document.getElementById("aplayer0"), narrow: false, autoplay: false, showlrc: 0, music: { title: "乞丐", author: "养鸡", url: "https://m10.music.126.net/20170909200209/756b13460ccd565eab68dd44365a17cd/ymusic/3a2e/8d03/c0bb/57de9017ce57680bc9f787cb1da10038.mp3", pic: "https://www.github.com/liyehuicn/liyehui/raw/master/img/1504957996995.jpg", } }); 视频代码： 1&#123;% dplayer &quot;url=http://devtest.qiniudn.com/若能绽放光芒.mp4&quot; &quot;pic=https://www.github.com/liyehuicn/liyehui/raw/master/img/1504929555850.jpg&quot; &quot;loop=yes&quot; &quot;theme=#FADFA3&quot; &quot;autoplay=false&quot; &quot;token=tokendemo&quot; %&#125; 效果如下：var dplayer0 = new DPlayer({"element":document.getElementById("dplayer0"),"autoplay":0,"theme":"#FADFA3","loop":1,"video":{"url":"http://devtest.qiniudn.com/若能绽放光芒.mp4","pic":"https://www.github.com/liyehuicn/liyehui/raw/master/img/1504959808928.jpg"}});]]></content>
      <tags>
        <tag>播放器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo常用命令]]></title>
    <url>%2F2017%2F09%2F02%2Fhexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[hexo123npm install hexo -g #安装 npm update hexo -g #升级 hexo init #初始化 简写hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; #新建文章hexo p == hexo publishhexo g == hexo generate#生成hexo s == hexo server #启动服务预览hexo d == hexo deploy#部署 服务器hexo server #Hexo 会监视文件变动并自动更新，您无须重启服务器。hexo server -s #静态模式hexo server -p 5000 #更改端口hexo server -i 192.168.1.1 #自定义 IP hexo clean #清除缓存 网页正常情况下可以忽略此条命令hexo g #生成静态网页hexo d #开始部署 监视文件变动hexo generate #使用 Hexo 生成静态文件快速而且简单hexo generate --watch #监视文件变动 完成后部署 两个命令的作用是相同的hexo generate --deployhexo deploy --generate hexo deploy -ghexo server -g 草稿hexo publish [layout] &lt;title&gt; 模版hexo new &quot;postName&quot; #新建文章hexo new page &quot;pageName&quot; #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，’ctrl + c’关闭server）hexo deploy #将.deploy目录部署到GitHub hexo new [layout] &lt;title&gt;hexo new photo &quot;My Gallery&quot;hexo new &quot;Hello World&quot; --lang tw 变量 描述 layout 布局 title 标题 date 文件建立日期 12345678title: 使用Hexo搭建个人博客layout: postdate: 2014-03-03 19:07:43comments: truecategories: Blogtags: [Hexo]keywords: Hexo, Blogdescription: 生命在于折腾 模版（Scaffold）hexo new photo &quot;My Gallery&quot; 变量 描述 layout 布局 title 标题 date 文件建立日期 设置文章摘要1以上是文章摘要 &lt;!--more--&gt; 以下是余下全文 写作hexo new page &lt;title&gt;hexo new post &lt;title&gt; 变量 描述 :title 标题 :year 建立的年份（4 位数） :month 建立的月份（2 位数） :i_month 建立的月份（去掉开头的零） :day 建立的日期（2 位数） :i_day 建立的日期（去掉开头的零） 推送到服务器上hexo n #写文章hexo g #生成hexo d #部署 #可与hexo g合并为 hexo d -g 报错1.找不到git部署1ERROR Deployer not found: git 解决方法 npm install hexo-deployer-git --save 3.部署类型设置githexo 3.0 部署类型不再是github，_config.yml 中修改 123456# Deployment## Docs: http://hexo.io/docs/deployment.htmldeploy: type: git repository: git@***.github.com:***/***.github.io.git branch: master 4. xcodebuildxcode-select: error: tool ‘xcodebuild’ requires Xcode, but active developer directory ‘/Library/Developer/CommandLineTools’ is a command line tools instance npm install bcrypt 5. RSS不显示安装RSS插件npm install hexo-generator-feed --save 开启RSS功能编辑hexo/_config.yml，添加如下代码： 1rss: /atom.xml #rss地址 默认即可]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo命令</tag>
      </tags>
  </entry>
</search>
